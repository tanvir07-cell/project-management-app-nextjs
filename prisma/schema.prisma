// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  firstName String?
  lastName  String?
  email     String  @unique
  password  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]
  tasks    Task[]
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  due         DateTime?

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  deleted Boolean @default(false)
  tasks   Task[]

  @@unique([ownerId, name])
  @@index([ownerId, id])
}

enum TASK_STATUS {
  NOT_STARTED
  STARTED
  COMPLETED
}

model Task {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  status TASK_STATUS @default(NOT_STARTED)

  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  due     DateTime?
  deleted Boolean   @default(false)

  name        String
  description String?

  @@index([ownerId])
}


